{"version":3,"sources":["components/Todo.js","components/TodoListView.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","props","style","fontWeight","todo","title","description","onClick","axios","delete","then","res","console","log","data","className","TodoView","todoList","map","Todo","App","useState","setTodoList","setTitle","desc","setDesc","useEffect","get","styleName","onChange","event","target","value","placeholder","post","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAqBeA,MAhBf,SAAkBC,GAKd,OACI,6BACI,2BACI,0BAAMC,MAAO,CAAEC,WAAY,oBAAsBF,EAAMG,KAAKC,MAA5D,OADJ,IACkFJ,EAAMG,KAAKE,YACzF,4BAAQC,QAAS,kBARFF,EAQ0BJ,EAAMG,KAAKC,WAPhEG,IAAMC,OAAN,wDAA8DJ,IACzDK,MAAK,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAIG,SAFP,IAACT,GAQ6CU,UAAU,mCAAmCb,MAAO,CAAC,aAAe,SAAhI,KACA,gCCVD,SAASc,EAASf,GAE7B,OADAW,QAAQC,IAAIZ,GAER,6BACI,4BACKA,EAAMgB,SAASC,KAAI,SAAAd,GAAI,OAAI,kBAACe,EAAD,CAAUf,KAAMA,S,MCwC7CgB,MA3Cf,WAEE,MAAgCC,mBAAS,CAAC,KAA1C,mBAAOJ,EAAP,KAAiBK,EAAjB,KACA,EAA0BD,mBAAS,IAAnC,mBAAOhB,EAAP,KAAckB,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAkBA,OAfAC,qBAAU,WACRlB,IAAMmB,IAAI,iDACPjB,MAAK,SAAAC,GACJW,EAAYX,EAAIG,YAapB,yBAAKC,UAAU,yEAAyEb,MAAO,CAAC,MAAQ,QAAS,gBAAkB,QAAS,UAAY,SACtJ,wBAAIa,UAAU,8BAA8Ba,UAAU,qBAAtD,8BACA,wBAAIb,UAAU,+BAAd,yBACD,yBAAKA,UAAU,aACd,wBAAIA,UAAU,gCAAd,wBACA,0BAAMA,UAAU,aACd,2BAAOA,UAAU,4BAA4Bc,SAAU,SAAAC,GAAK,OAAIP,EAASO,EAAMC,OAAOC,QAAQC,YAAY,UAC1G,2BAAOlB,UAAU,0BAA0Bc,SAAU,SAAAC,GAAK,OAAIL,EAAQK,EAAMC,OAAOC,QAAUC,YAAY,gBAC3G,4BAAQlB,UAAU,8BAA8Bb,MAAO,CAAC,aAAe,OAAO,cAAc,QAAUK,QAhBnF,WACrBC,IAAM0B,KAAK,iDAAkD,CAAE,MAAS7B,EAAO,YAAemB,IAC3Fd,MAAK,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAczB,aAEA,wBAAII,UAAU,gCAAd,cACA,6BACA,kBAACC,EAAD,CAAUC,SAAUA,MAGpB,wBAAIF,UAAU,uCAAd,uCCjCSoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,iBCEdO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,OAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.12068554.chunk.js","sourcesContent":["// @bekbrace\n// FARMSTACK Tutorial - Sunday 13.06.2021\nimport axios from 'axios';\nimport React from 'react';\n\nfunction TodoItem(props) {\n    const deleteTodoHandler = (title) => {\n    axios.delete(`https://waver--backend.herokuapp.com/api/todo/${title}`)\n        .then(res => console.log(res.data)) }\n\n    return (\n        <div>\n            <p>\n                <span style={{ fontWeight: 'bold, underline' }}>{props.todo.title} : </span> {props.todo.description}\n                <button onClick={() => deleteTodoHandler(props.todo.title)} className=\"btn btn-outline-danger my-2 mx-2\" style={{'borderRadius':'50px',}}>X</button>\n                <hr></hr>\n            </p>\n        </div>\n    )\n}\n\nexport default TodoItem;\n","// @bekbrace\n// FARMSTACK Tutorial - Sunday 13.06.2021\nimport React from 'react';\nimport TodoItem from './Todo';\n\nexport default function TodoView(props) {\n    console.log(props);\n    return (\n        <div>\n            <ul>\n                {props.todoList.map(todo => <TodoItem todo={todo} />)}\n            </ul>\n        </div>\n    )\n}\n","\nimport React, { useState, useEffect} from 'react';\nimport './App.css';\nimport TodoView from './components/TodoListView';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n\n  const [todoList, setTodoList] = useState([{}])\n  const [title, setTitle] = useState('')\n  const [desc, setDesc] = useState('')\n\n  // Read all todos\n  useEffect(() => {\n    axios.get('https://waver--backend.herokuapp.com/api/todo')\n      .then(res => {\n        setTodoList(res.data)\n      })\n  });\n\n  // Post a todo\n  const addTodoHandler = () => {\n    axios.post('https://waver--backend.herokuapp.com/api/todo/', { 'title': title, 'description': desc })\n      .then(res => console.log(res))\n};\n\n\n\n  return (\n    <div className=\"App list-group-item  justify-content-center align-items-center mx-auto\" style={{\"width\":\"400px\", \"backgroundColor\":\"white\", \"marginTop\":\"50px\"}} >\n      <h1 className=\"p-3 mb-2 bg-info text-white\" styleName=\"max-width: 20rem;\">the best Task Manager ever</h1>\n      <h6 className=\"p-3 mb-2 bg-info text-white\">with love from Nadine</h6>\n     <div className=\"card-body\">\n      <h5 className=\"card text-white bg-dark mb-3\">Write something nice</h5>\n      <span className=\"card-text\">\n        <input className=\"mb-2 form-control titleIn\" onChange={event => setTitle(event.target.value)} placeholder='Title'/>\n        <input className=\"mb-2 form-control desIn\" onChange={event => setDesc(event.target.value)}   placeholder='Description'/>\n      <button className=\"p-3 mb-2 bg-info text-white\" style={{'borderRadius':'50px',\"font-weight\":\"bold\"}}  onClick={addTodoHandler}>Add Task</button>\n      </span>\n      <h5 className=\"card text-white bg-dark mb-3\">Your Tasks</h5>\n      <div >\n      <TodoView todoList={todoList} />\n      </div>\n      </div>\n      <h6 className=\"card text-dark bg-warning py-1 mb-0\" >lets celebrate on Wednesday! &copy;</h6>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Snowfall from 'react-snowfall';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <Snowfall />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}