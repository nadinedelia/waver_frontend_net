{"version":3,"sources":["Player.js","App.js","reportWebVitals.js","index.js"],"names":["Player","url","useState","Audio","audio","playing","setPlaying","useEffect","play","pause","addEventListener","removeEventListener","useAudio","toggle","onClick","App","setTodoList","title","setTitle","desc","setDesc","axios","get","then","res","data","className","style","styleName","onChange","event","target","value","placeholder","post","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAkCeA,EAVA,SAAC,GAAa,IAC3B,EAvBe,SAAAC,GACf,MAAgBC,mBAAS,IAAIC,MAAMF,IAA5BG,EAAP,oBACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAiBA,OAbAC,qBAAU,WACNF,EAAUD,EAAMI,OAASJ,EAAMK,UAEjC,CAACJ,IAGHE,qBAAU,WAER,OADAH,EAAMM,iBAAiB,SAAS,kBAAMJ,GAAW,MAC1C,WACLF,EAAMO,oBAAoB,SAAS,kBAAML,GAAW,SAErD,IAEI,CAACD,EAfO,kBAAMC,GAAYD,KAmBPO,CADA,EAAVX,KAChB,mBAAOI,EAAP,KAAgBQ,EAAhB,KAEA,OACE,6BACE,4BAAQC,QAASD,GAASR,EAAU,QAAU,UC0BrCU,MA/Cf,WAEE,MAAgCb,mBAAS,CAAC,KAA1C,mBAAiBc,GAAjB,WACA,EAA0Bd,mBAAS,IAAnC,mBAAOe,EAAP,KAAcC,EAAd,KACA,EAAwBhB,mBAAS,IAAjC,mBAAOiB,EAAP,KAAaC,EAAb,KAkBA,OAfAb,qBAAU,WACRc,IAAMC,IAAI,iDACPC,MAAK,SAAAC,GACJR,EAAYQ,EAAIC,YAapB,yBAAKC,UAAU,yEAAyEC,MAAO,CAAC,MAAQ,QAAS,gBAAkB,QAAS,UAAY,SACtJ,wBAAID,UAAU,8BAA8BE,UAAU,qBAAtD,8BACA,wBAAIF,UAAU,+BAAd,yBACD,yBAAKA,UAAU,aACd,wBAAIA,UAAU,gCAAd,yCACA,0BAAMA,UAAU,aACd,2BAAOA,UAAU,4BAA4BG,SAAU,SAAAC,GAAK,OAAIZ,EAASY,EAAMC,OAAOC,QAAQC,YAAY,UAC1G,2BAAOP,UAAU,0BAA0BG,SAAU,SAAAC,GAAK,OAAIV,EAAQU,EAAMC,OAAOC,QAAUC,YAAY,gBAC3G,4BAAQP,UAAU,8BAA8BC,MAAO,CAAC,aAAe,OAAO,cAAc,QAAUb,QAhBnF,WACrBO,IAAMa,KAAK,iDAAkD,CAAE,MAASjB,EAAO,YAAeE,IAC3FI,MAAK,SAAAC,GAAG,OAAIW,QAAQC,IAAIZ,QAczB,aAEA,wBAAIE,UAAU,gCAAd,oBACA,6BACA,kBAAC,EAAD,CACEzB,IAAK,CACH,iEACC0B,MAAO,CAAC,UAAY,YAIzB,wBAAID,UAAU,uCAAd,qBCtCSW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,iBCEdO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,OAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5cd99676.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst useAudio = url => {\n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n\n  const toggle = () => setPlaying(!playing);\n\n  useEffect(() => {\n      playing ? audio.play() : audio.pause();\n    },\n    [playing]\n  );\n\n  useEffect(() => {\n    audio.addEventListener('ended', () => setPlaying(false));\n    return () => {\n      audio.removeEventListener('ended', () => setPlaying(false));\n    };\n  }, []);\n\n  return [playing, toggle];\n};\n\nconst Player = ({ url }) => {\n  const [playing, toggle] = useAudio(url);\n\n  return (\n    <div>\n      <button onClick={toggle}>{playing ? \"Pause\" : \"Play\"}</button>\n    </div>\n  );\n};\n\nexport default Player;","\nimport React, { useState, useEffect} from 'react';\nimport './App.css';\nimport TodoView from './components/TodoListView';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Player from \"./Player\";\n\nfunction App() {\n\n  const [todoList, setTodoList] = useState([{}])\n  const [title, setTitle] = useState('')\n  const [desc, setDesc] = useState('')\n\n  // Read all todos\n  useEffect(() => {\n    axios.get('https://waver--backend.herokuapp.com/api/todo')\n      .then(res => {\n        setTodoList(res.data)\n      })\n  });\n\n  // Post a todo\n  const addTodoHandler = () => {\n    axios.post('https://waver--backend.herokuapp.com/api/todo/', { 'title': title, 'description': desc })\n      .then(res => console.log(res))\n};\n\n\n\n  return (\n    <div className=\"App list-group-item  justify-content-center align-items-center mx-auto\" style={{\"width\":\"400px\", \"backgroundColor\":\"white\", \"marginTop\":\"50px\"}} >\n      <h1 className=\"p-3 mb-2 bg-info text-white\" styleName=\"max-width: 20rem;\">the best Task Manager ever</h1>\n      <h6 className=\"p-3 mb-2 bg-info text-white\">with love from Nadine</h6>\n     <div className=\"card-body\">\n      <h5 className=\"card text-white bg-dark mb-3\">this isn't working yet babe. plz fix.</h5>\n      <span className=\"card-text\">\n        <input className=\"mb-2 form-control titleIn\" onChange={event => setTitle(event.target.value)} placeholder='Title'/>\n        <input className=\"mb-2 form-control desIn\" onChange={event => setDesc(event.target.value)}   placeholder='Description'/>\n      <button className=\"p-3 mb-2 bg-info text-white\" style={{'borderRadius':'50px',\"font-weight\":\"bold\"}}  onClick={addTodoHandler}>Add Task</button>\n      </span>\n      <h5 className=\"card text-white bg-dark mb-3\">Click for music!</h5>\n      <div >\n      <Player\n        url={[\n          'https://www.soundhelix.com/examples/mp3/SoundHelix-Song-2.mp3'\n        ]} style={{\"marginTop\":\"50px\"}} \n      />\n      </div>\n      </div>\n      <h6 className=\"card text-dark bg-warning py-1 mb-0\" >see you soon xx</h6>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Snowfall from 'react-snowfall';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <Snowfall />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}