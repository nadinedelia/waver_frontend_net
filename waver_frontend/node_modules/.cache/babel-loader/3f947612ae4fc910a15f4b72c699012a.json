{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _config = require(\"./config\");\n\nvar _hooks = require(\"./hooks\");\n\nvar _Snowflake = require(\"./Snowflake\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar Snowfall = function Snowfall() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? _Snowflake.defaultConfig.color : _ref$color,\n      _ref$changeFrequency = _ref.changeFrequency,\n      changeFrequency = _ref$changeFrequency === void 0 ? _Snowflake.defaultConfig.changeFrequency : _ref$changeFrequency,\n      _ref$radius = _ref.radius,\n      radius = _ref$radius === void 0 ? _Snowflake.defaultConfig.radius : _ref$radius,\n      _ref$speed = _ref.speed,\n      speed = _ref$speed === void 0 ? _Snowflake.defaultConfig.speed : _ref$speed,\n      _ref$wind = _ref.wind,\n      wind = _ref$wind === void 0 ? _Snowflake.defaultConfig.wind : _ref$wind,\n      _ref$snowflakeCount = _ref.snowflakeCount,\n      snowflakeCount = _ref$snowflakeCount === void 0 ? 150 : _ref$snowflakeCount,\n      style = _ref.style;\n\n  var mergedStyle = (0, _hooks.useSnowfallStyle)(style);\n  var canvasRef = (0, _react.useRef)(null);\n  var canvasSize = (0, _hooks.useComponentSize)(canvasRef);\n  var animationFrame = (0, _react.useRef)(0);\n  var lastUpdate = (0, _react.useRef)(Date.now());\n  var config = (0, _hooks.useDeepMemo)({\n    color: color,\n    changeFrequency: changeFrequency,\n    radius: radius,\n    speed: speed,\n    wind: wind\n  });\n  var snowflakes = (0, _hooks.useSnowflakes)(canvasRef, snowflakeCount, config);\n  var render = (0, _react.useCallback)(function () {\n    var framesPassed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var canvas = canvasRef.current;\n\n    if (canvas) {\n      // Update the positions of the snowflakes\n      snowflakes.forEach(function (snowflake) {\n        return snowflake.update(canvas, framesPassed);\n      }); // Render them if the canvas is available\n\n      var ctx = canvas.getContext('2d');\n\n      if (ctx) {\n        ctx.clearRect(0, 0, canvas.offsetWidth, canvas.offsetHeight);\n        snowflakes.forEach(function (snowflake) {\n          return snowflake.draw(ctx);\n        });\n      }\n    }\n  }, [snowflakes]);\n  var loop = (0, _react.useCallback)(function () {\n    // Update based on time passed so that a slow frame rate won't slow down the snowflake\n    var now = Date.now();\n    var msPassed = Date.now() - lastUpdate.current;\n    lastUpdate.current = now; // Frames that would have passed if running at 60 fps\n\n    var framesPassed = msPassed / _config.targetFrameTime;\n    render(framesPassed);\n    animationFrame.current = requestAnimationFrame(loop);\n  }, [render]);\n  (0, _react.useEffect)(function () {\n    loop();\n    return function () {\n      return cancelAnimationFrame(animationFrame.current);\n    };\n  }, [loop]);\n  return /*#__PURE__*/_react[\"default\"].createElement(\"canvas\", {\n    ref: canvasRef,\n    height: canvasSize.height,\n    width: canvasSize.width,\n    style: mergedStyle,\n    \"data-testid\": \"SnowfallCanvas\"\n  });\n};\n\nvar _default = Snowfall;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../src/Snowfall.tsx"],"names":["Snowfall","color","defaultConfig","changeFrequency","radius","speed","wind","snowflakeCount","style","mergedStyle","canvasRef","canvasSize","animationFrame","lastUpdate","Date","config","snowflakes","render","framesPassed","canvas","snowflake","ctx","loop","now","msPassed","targetFrameTime","requestAnimationFrame","cancelAnimationFrame"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,GAQsB;AAAA,MAAA,IAAA,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAApB,EAAoB;AAAA,MAAA,UAAA,GAAA,IAAA,CAPrCC,KAOqC;AAAA,MAPrCA,KAOqC,GAAA,UAAA,KAAA,KAAA,CAAA,GAP7BC,UAAAA,CAAAA,aAAAA,CAAcD,KAOe,GAAA,UAAA;AAAA,MAAA,oBAAA,GAAA,IAAA,CANrCE,eAMqC;AAAA,MANrCA,eAMqC,GAAA,oBAAA,KAAA,KAAA,CAAA,GANnBD,UAAAA,CAAAA,aAAAA,CAAcC,eAMK,GAAA,oBAAA;AAAA,MAAA,WAAA,GAAA,IAAA,CALrCC,MAKqC;AAAA,MALrCA,MAKqC,GAAA,WAAA,KAAA,KAAA,CAAA,GAL5BF,UAAAA,CAAAA,aAAAA,CAAcE,MAKc,GAAA,WAAA;AAAA,MAAA,UAAA,GAAA,IAAA,CAJrCC,KAIqC;AAAA,MAJrCA,KAIqC,GAAA,UAAA,KAAA,KAAA,CAAA,GAJ7BH,UAAAA,CAAAA,aAAAA,CAAcG,KAIe,GAAA,UAAA;AAAA,MAAA,SAAA,GAAA,IAAA,CAHrCC,IAGqC;AAAA,MAHrCA,IAGqC,GAAA,SAAA,KAAA,KAAA,CAAA,GAH9BJ,UAAAA,CAAAA,aAAAA,CAAcI,IAGgB,GAAA,SAAA;AAAA,MAAA,mBAAA,GAAA,IAAA,CAFrCC,cAEqC;AAAA,MAFrCA,cAEqC,GAAA,mBAAA,KAAA,KAAA,CAAA,GAFpB,GAEoB,GAAA,mBAAA;AAAA,MADrCC,KACqC,GAAA,IAAA,CADrCA,KACqC;;AACrC,MAAMC,WAAW,GAAG,CAAA,GAAA,MAAA,CAAA,gBAAA,EAApB,KAAoB,CAApB;AAEA,MAAMC,SAAS,GAAG,CAAA,GAAA,MAAA,CAAA,MAAA,EAAlB,IAAkB,CAAlB;AACA,MAAMC,UAAU,GAAG,CAAA,GAAA,MAAA,CAAA,gBAAA,EAAnB,SAAmB,CAAnB;AACA,MAAMC,cAAc,GAAG,CAAA,GAAA,MAAA,CAAA,MAAA,EAAvB,CAAuB,CAAvB;AAEA,MAAMC,UAAU,GAAG,CAAA,GAAA,MAAA,CAAA,MAAA,EAAOC,IAAI,CAA9B,GAA0BA,EAAP,CAAnB;AACA,MAAMC,MAAM,GAAG,CAAA,GAAA,MAAA,CAAA,WAAA,EAA4B;AAAEd,IAAAA,KAAK,EAAP,KAAA;AAASE,IAAAA,eAAe,EAAxB,eAAA;AAA0BC,IAAAA,MAAM,EAAhC,MAAA;AAAkCC,IAAAA,KAAK,EAAvC,KAAA;AAAyCC,IAAAA,IAAI,EAAJA;AAAzC,GAA5B,CAAf;AACA,MAAMU,UAAU,GAAG,CAAA,GAAA,MAAA,CAAA,aAAA,EAAA,SAAA,EAAA,cAAA,EAAnB,MAAmB,CAAnB;AAEA,MAAMC,MAAM,GAAG,CAAA,GAAA,MAAA,CAAA,WAAA,EACb,YAAsB;AAAA,QAArBC,YAAqB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAN,CAAM;AACpB,QAAMC,MAAM,GAAGT,SAAS,CAAxB,OAAA;;AACA,QAAA,MAAA,EAAY;AACV;AACAM,MAAAA,UAAU,CAAVA,OAAAA,CAAmB,UAAA,SAAA,EAAA;AAAA,eAAeI,SAAS,CAATA,MAAAA,CAAAA,MAAAA,EAAf,YAAeA,CAAf;AAFT,OAEVJ,EAFU,CAIV;;AACA,UAAMK,GAAG,GAAGF,MAAM,CAANA,UAAAA,CAAZ,IAAYA,CAAZ;;AACA,UAAA,GAAA,EAAS;AACPE,QAAAA,GAAG,CAAHA,SAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAoBF,MAAM,CAA1BE,WAAAA,EAAwCF,MAAM,CAA9CE,YAAAA;AAEAL,QAAAA,UAAU,CAAVA,OAAAA,CAAmB,UAAA,SAAA,EAAA;AAAA,iBAAeI,SAAS,CAATA,IAAAA,CAAf,GAAeA,CAAf;AAAnBJ,SAAAA;AACD;AACF;AAdU,GAAA,EAgBb,CAhBF,UAgBE,CAhBa,CAAf;AAmBA,MAAMM,IAAI,GAAG,CAAA,GAAA,MAAA,CAAA,WAAA,EAAY,YAAM;AAC7B;AACA,QAAMC,GAAG,GAAGT,IAAI,CAAhB,GAAYA,EAAZ;AACA,QAAMU,QAAQ,GAAGV,IAAI,CAAJA,GAAAA,KAAaD,UAAU,CAAxC,OAAA;AACAA,IAAAA,UAAU,CAAVA,OAAAA,GAJ6B,GAI7BA,CAJ6B,CAM7B;;AACA,QAAMK,YAAY,GAAGM,QAAQ,GAAGC,OAAAA,CAAhC,eAAA;AAEAR,IAAAA,MAAM,CAANA,YAAM,CAANA;AAEAL,IAAAA,cAAc,CAAdA,OAAAA,GAAyBc,qBAAqB,CAA9Cd,IAA8C,CAA9CA;AAXW,GAAA,EAYV,CAZH,MAYG,CAZU,CAAb;AAcA,GAAA,GAAA,MAAA,CAAA,SAAA,EAAU,YAAM;AACdU,IAAAA,IAAI;AACJ,WAAO,YAAA;AAAA,aAAMK,oBAAoB,CAACf,cAAc,CAAzC,OAA0B,CAA1B;AAAP,KAAA;AAFF,GAAA,EAGG,CAHH,IAGG,CAHH;AAKA,SAAA,aACE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACE,IAAA,GAAG,EADL,SAAA;AAEE,IAAA,MAAM,EAAED,UAAU,CAFpB,MAAA;AAGE,IAAA,KAAK,EAAEA,UAAU,CAHnB,KAAA;AAIE,IAAA,KAAK,EAJP,WAAA;AAKE,mBAAY;AALd,GAAA,CADF;AAzDF,CAAA;;eAoEeX,Q","sourcesContent":["import React, { useCallback, useEffect, useRef } from 'react'\r\nimport { targetFrameTime } from './config'\r\nimport { useComponentSize, useSnowfallStyle, useSnowflakes, useDeepMemo } from './hooks'\r\nimport { SnowflakeProps, defaultConfig } from './Snowflake'\r\n\r\nexport interface SnowfallProps extends Partial<SnowflakeProps> {\r\n  /**\r\n   * The number of snowflakes to be rendered.\r\n   *\r\n   * The default value is 150.\r\n   */\r\n  snowflakeCount?: number\r\n  /**\r\n   * Any style properties that will be passed to the canvas element.\r\n   */\r\n  style?: React.CSSProperties\r\n}\r\n\r\nconst Snowfall = ({\r\n  color = defaultConfig.color,\r\n  changeFrequency = defaultConfig.changeFrequency,\r\n  radius = defaultConfig.radius,\r\n  speed = defaultConfig.speed,\r\n  wind = defaultConfig.wind,\r\n  snowflakeCount = 150,\r\n  style,\r\n}: SnowfallProps = {}): JSX.Element => {\r\n  const mergedStyle = useSnowfallStyle(style)\r\n\r\n  const canvasRef = useRef<HTMLCanvasElement>(null)\r\n  const canvasSize = useComponentSize(canvasRef)\r\n  const animationFrame = useRef(0)\r\n\r\n  const lastUpdate = useRef(Date.now())\r\n  const config = useDeepMemo<SnowflakeProps>({ color, changeFrequency, radius, speed, wind })\r\n  const snowflakes = useSnowflakes(canvasRef, snowflakeCount, config)\r\n\r\n  const render = useCallback(\r\n    (framesPassed = 1) => {\r\n      const canvas = canvasRef.current\r\n      if (canvas) {\r\n        // Update the positions of the snowflakes\r\n        snowflakes.forEach((snowflake) => snowflake.update(canvas, framesPassed))\r\n\r\n        // Render them if the canvas is available\r\n        const ctx = canvas.getContext('2d')\r\n        if (ctx) {\r\n          ctx.clearRect(0, 0, canvas.offsetWidth, canvas.offsetHeight)\r\n\r\n          snowflakes.forEach((snowflake) => snowflake.draw(ctx))\r\n        }\r\n      }\r\n    },\r\n    [snowflakes],\r\n  )\r\n\r\n  const loop = useCallback(() => {\r\n    // Update based on time passed so that a slow frame rate won't slow down the snowflake\r\n    const now = Date.now()\r\n    const msPassed = Date.now() - lastUpdate.current\r\n    lastUpdate.current = now\r\n\r\n    // Frames that would have passed if running at 60 fps\r\n    const framesPassed = msPassed / targetFrameTime\r\n\r\n    render(framesPassed)\r\n\r\n    animationFrame.current = requestAnimationFrame(loop)\r\n  }, [render])\r\n\r\n  useEffect(() => {\r\n    loop()\r\n    return () => cancelAnimationFrame(animationFrame.current)\r\n  }, [loop])\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      height={canvasSize.height}\r\n      width={canvasSize.width}\r\n      style={mergedStyle}\r\n      data-testid=\"SnowfallCanvas\"\r\n    />\r\n  )\r\n}\r\n\r\nexport default Snowfall\r\n"]},"metadata":{},"sourceType":"script"}